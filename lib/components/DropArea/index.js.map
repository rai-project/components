{"version":3,"sources":["../../../src/node_modules/components/DropArea/index.js"],"names":["DroppedFilesWrapper","div","DropAreaWrapper","props","icon","Preview","DropArea","onFileDrop","console","log","files","renderFiles","value","name","onChange","required","disabled","className","id","color","Component","propTypes","func","isRequired","bool","string","defaultProps"],"mappings":";;;;;;;;;;;;AAAA;;;;AACA;;AACA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;AAEA,IAAMA,sBAAsB,2BAAOC,GAA7B,iBAAN;;AASA,IAAMC,kBAAkB,2BAAOD,GAAzB,mBAKa;AAAA,QAASE,MAAMC,IAAN,kBAAT;AAAA,CALb,CAAN;;AAoBA,IAAMC,UAAU,2BAAOJ,GAAjB,kBAAN;;IAEqBK,Q;;;;;;;;;;;;;;wLAkCpBC,U,GAAa,iBAAS;AACrBC,WAAQC,GAAR,CAAYC,KAAZ;AACA;AACA;AACA;AACA;AACA;AACA,G,QACDC,W,GAAc,YAAM;AAAA,OACXC,KADW,GACD,MAAKT,KADJ,CACXS,KADW;;AAEnB,OAAIA,SAASA,MAAM,CAAN,CAAb,EAAuB;AACtB,WACC;AAAC,wBAAD;AAAA;AACC,4DAAM,MAAK,YAAX,GADD;AAEC;AAAC,aAAD;AAAA,QAAS,QAAQ,IAAjB;AACEA,YAAM,CAAN,EAASC;AADX;AAFD,KADD;AAQA,IATD,MASO;AACN,WACC;AAAC,wBAAD;AAAA;AACC;AAAC,aAAD;AAAA;AAAA;AAAA;AADD,KADD;AAKA;AACD,G;;;;;2BAEQ;AAAA,gBACuD,KAAKV,KAD5D;AAAA,OACAW,QADA,UACAA,QADA;AAAA,OACUF,KADV,UACUA,KADV;AAAA,OACiBG,QADjB,UACiBA,QADjB;AAAA,OAC2BC,QAD3B,UAC2BA,QAD3B;AAAA,OACqCC,SADrC,UACqCA,SADrC;AAAA,OACgDC,EADhD,UACgDA,EADhD;;AAERV,WAAQC,GAAR,CAAYP,eAAZ;AACA,UACC;AAAC,mBAAD;AAAA,MAAiB,oBAAjB;AACC;AAAA;AAAA;AACC,gBAAU,KADX;AAEC,aAAO,EAFR;AAGC,cAAO,SAHR;AAIC,cAAQ,KAAKK,UAJd;AAKC,mBAAa,EAAEY,OAAO,SAAT,EALd;AAMC,mBAAa,EANd;AAOC,gBAAUJ,QAPX;AAQC,gBAAUC,QARX;AASC,iBAAWC,SATZ;AAUC,UAAIC,EAVL;AAWE,UAAKP,WAAL;AAXF;AADD,IADD;AAiBA;;;;EAlFoC,gBAAMS,S;;AAAvBd,Q,CACbe,S,GAAY;AAClB;;;AAGAP,WAAU,oBAAUQ,IAAV,CAAeC,UAJP;AAKlB;;;AAGAR,WAAU,oBAAUS,IARF;AASlB;;;AAGAR,WAAU,oBAAUQ,IAZF;AAalB;;;AAGAP,YAAW,oBAAUQ,MAhBH;AAiBlB;;;AAGAP,KAAI,oBAAUO,MApBI;;AAsBlBrB,OAAM,oBAAUqB;AAtBE,C;AADCnB,Q,CA0BboB,Y,GAAe;AACrBX,WAAU,KADW;AAErBC,WAAU,KAFW;AAGrBC,YAAW,IAHU;AAIrBC,KAAI,IAJiB;AAKrBd;AALqB,C;kBA1BFE,Q","file":"index.js","sourcesContent":["import React from 'react';\nimport { Container, Progress, Card, Image, Dimmer, Segment, Feed, Label, Icon } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport { Form } from 'formsy-semantic-ui-react';\nimport ReactDropzone from 'react-dropzone';\nimport styled from 'styled-components';\nimport icon from './icon.svg';\n\nconst DroppedFilesWrapper = styled.div`\n\twidth: 100%;\n\tfont-size: 200%;\n\tcolor: #2d3e50;\n\tfont-weight: 400;\n\tmargin: 2em 0;\n\tvertical-align: baseline;\n`;\n\nconst DropAreaWrapper = styled.div`\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tmin-height: 10vh;\n\tbackground: url(${props => props.icon || icon});\n\tbackground-attachment: initial;\n\tbackground-position-x: center;\n\tbackground-position-y: center;\n\n\tbackground-size: contain;\n\tbackground-position: center;\n\tbackground-repeat: no-repeat;\n\n\tborder-width: 1;\n\tborder-color: \"#ddd\";\n\tborder-style: \"solid\";\n\tborder-radius: 2;\n`;\n\nconst Preview = styled.div`margin: auto auto auto 16px;`;\n\nexport default class DropArea extends React.Component {\n\tstatic propTypes = {\n\t\t/**\n     * Handler for the onChange event on the input.\n     */\n\t\tonChange: PropTypes.func.isRequired,\n\t\t/**\n     * Marks that this input is required for form submission.\n     */\n\t\trequired: PropTypes.bool,\n\t\t/**\n     * Marks that the user cannot change this input.\n     */\n\t\tdisabled: PropTypes.bool,\n\t\t/**\n     * Adds a class name to the input element.\n     */\n\t\tclassName: PropTypes.string,\n\t\t/**\n     * Adds an id to the input element.\n     */\n\t\tid: PropTypes.string,\n\n\t\ticon: PropTypes.string,\n\t};\n\n\tstatic defaultProps = {\n\t\trequired: false,\n\t\tdisabled: false,\n\t\tclassName: null,\n\t\tid: null,\n\t\ticon,\n\t};\n\n\tonFileDrop = files => {\n\t\tconsole.log(files);\n\t\t// const upload = uploadProfilePicture(files[0])\n\t\t// // track progress\n\t\t// upload.on('state_changed', snapshot => {\n\t\t//   this.setState({ uploadProgress: Math.floor((snapshot.bytesTransferred / snapshot.totalBytes) * 100) })\n\t\t// })\n\t};\n\trenderFiles = () => {\n\t\tconst { value } = this.props;\n\t\tif (value && value[0]) {\n\t\t\treturn (\n\t\t\t\t<DroppedFilesWrapper>\n\t\t\t\t\t<Icon name=\"fileFilled\" />\n\t\t\t\t\t<Preview active={true}>\n\t\t\t\t\t\t{value[0].name}\n\t\t\t\t\t</Preview>\n\t\t\t\t</DroppedFilesWrapper>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<DroppedFilesWrapper>\n\t\t\t\t\t<Preview>Drop a file here, or click to browse.</Preview>\n\t\t\t\t</DroppedFilesWrapper>\n\t\t\t);\n\t\t}\n\t};\n\n\trender() {\n\t\tconst { onChange, value, required, disabled, className, id } = this.props;\n\t\tconsole.log(DropAreaWrapper);\n\t\treturn (\n\t\t\t<DropAreaWrapper icon={icon}>\n\t\t\t\t<ReactDropzone\n\t\t\t\t\tmultiple={false}\n\t\t\t\t\tstyle={{}}\n\t\t\t\t\taccept=\"image/*\"\n\t\t\t\t\tonDrop={this.onFileDrop}\n\t\t\t\t\tactiveStyle={{ color: '#00bcec' }}\n\t\t\t\t\trejectStyle={{}}\n\t\t\t\t\trequired={required}\n\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\tclassName={className}\n\t\t\t\t\tid={id}>\n\t\t\t\t\t{this.renderFiles()}\n\t\t\t\t</ReactDropzone>\n\t\t\t</DropAreaWrapper>\n\t\t);\n\t}\n}\n"]}