{"version":3,"sources":["../../../src/node_modules/components/FileBrowser/Directory.js"],"names":["Opener","div","props","open","Label","LabelName","span","DirectoryLevel","Directory","handleOnClick","setState","isOpen","state","debug","uuid","content","name","connectDropTarget","connectDragSource","body","map","p","isDirectory","caretIcon","folderIcon","Component","propTypes","bool","string","array","defaultProps","entrySource","beginDrag","text","entryTarget","drop","monitor","isOver","shallow","sourceItem","getItem","directory","sandboxActions","moveDirectoryToDirectory","sandboxId","id","shortid","moveModuleToDirectory","canDrop","source","collectTarget","connectMonitor","dropTarget","itemType","getItemType","collectSource","connect","dragSource","isDragging"],"mappings":"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","file":"Directory.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Row, Column } from \"hedron\";\nimport { DragSource, DropTarget } from \"react-dnd\";\nimport styled from \"styled-components\";\nimport File from \"./File\";\nimport ADirectory from \"./Directory\";\nimport yeast from \"yeast\";\nimport CaretDownIcon from \"react-icons/lib/fa/caret-down\";\nimport CaretRightIcon from \"react-icons/lib/fa/caret-right\";\nimport FolderIcon from \"react-icons/lib/fa/folder-o\";\nimport FolderOpenIcon from \"react-icons/lib/fa/folder-open-o\";\n\nconst Opener = styled.div`\n  height: ${props => {\n    return props.open ? \"100%\" : \"0px\";\n  }};\n  opacity: ${props => {\n    return props.open ? 1 : 0;\n  }};\n  transition: all cubic-bezier(0, 0, 0, 1.05) 100ms;\n  overflow: hidden;\n`;\n\nconst Label = styled.div`\n  cursor: pointer;\n  :hover {\n    background-color: #ddd;\n  }\n`;\nconst LabelName = styled.span`padding-left: 5px;`;\nconst DirectoryLevel = styled.div`\n  cursor: pointer;\n  margin-left: 6px;\n  border-left: 1px dashed #d6d6d6;\n  padding-left: 6px;\n`;\n\nclass Directory extends React.Component {\n  static propTypes = {\n    debug: PropTypes.bool,\n    uuid: PropTypes.string,\n    name: PropTypes.string,\n    content: PropTypes.array,\n    isOpen: PropTypes.bool\n  };\n\n  static defaultProps = {\n    debug: false,\n    uuid: yeast(),\n    name: \".\",\n    content: [],\n    isOpen: false\n  };\n  constructor(props) {\n    super(props);\n    this.state = { isOpen: props.isOpen || false };\n  }\n  handleOnClick = () => {\n    // eslint-disable-next-line\n\t\tthis.setState({\n\t\t\tisOpen: !this.state.isOpen, // eslint-disable-line\n    });\n  };\n  render() {\n    const {\n      debug,\n      uuid,\n      content,\n      name,\n\t\t\tconnectDropTarget, // eslint-disable-line\n\t\t\tconnectDragSource, // eslint-disable-line\n    } = this.props;\n    const { isOpen } = this.state;\n    const body = content.map(p => {\n      return p.isDirectory\n        ? <ADirectory debug={debug} key={p.name + uuid} {...p} />\n        : <File debug={debug} key={p.name + uuid} {...p} />;\n    });\n    const caretIcon = isOpen ? <CaretDownIcon /> : <CaretRightIcon />;\n    const folderIcon = isOpen ? <FolderOpenIcon /> : <FolderIcon />;\n    return connectDragSource(\n      <div>\n        <Row debug={debug} divisions={2}>\n          <Column debug={debug} fluid>\n            <Label onClick={this.handleOnClick}>\n              {caretIcon}\n              {folderIcon}\n              <LabelName>\n                {name}\n              </LabelName>\n            </Label>\n            <DirectoryLevel>\n              <Opener open={isOpen}>\n                {body}\n              </Opener>\n            </DirectoryLevel>\n          </Column>\n        </Row>\n      </div>\n    );\n  }\n}\n\nconst entrySource = {\n  beginDrag(props) {\n    return {\n      text: props.text\n    };\n  }\n};\n\nconst entryTarget = {\n  drop: (props, monitor) => {\n    if (monitor == null) return;\n\n    // Check if only child is selected:\n    if (!monitor.isOver({ shallow: true })) return;\n\n    const sourceItem = monitor.getItem();\n\n    if (sourceItem.directory) {\n      props.sandboxActions.moveDirectoryToDirectory(\n        props.sandboxId,\n        sourceItem.id,\n        props.shortid\n      );\n    } else {\n      props.sandboxActions.moveModuleToDirectory(\n        props.sandboxId,\n        sourceItem.id,\n        props.shortid\n      );\n    }\n  },\n\n  canDrop: (props, monitor) => {\n    if (monitor == null) return false;\n    const source = monitor.getItem();\n    if (source == null) return false;\n\n    if (source.id === props.id) return false;\n    return true;\n  }\n};\n\nconst collectTarget = (connectMonitor, monitor) => ({\n  // Call this function inside render()\n  // to let React DnD handle the drag events:\n  connectDropTarget: connectMonitor.dropTarget(),\n  // You can ask the monitor about the current drag state:\n  isOver: monitor.isOver({ shallow: true }),\n  canDrop: monitor.canDrop(),\n  itemType: monitor.getItemType()\n});\nconst collectSource = (connect, monitor) => ({\n  connectDragSource: connect.dragSource(),\n  isDragging: monitor.isDragging()\n});\n\n// eslint-disable-next-line\nexport default DragSource('Directory', entrySource, collectSource)(\n  // eslint-disable-next-line\n\tDropTarget('Directory', entryTarget, collectTarget)(Directory)\n);\n"]}