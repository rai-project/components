{"version":3,"sources":["../../../src/node_modules/components/S3Uploader/index.js"],"names":["uploadOptions","partSize","queueSize","S3Uploader","escapeName","encodeURIComponent","s","replace","getUploadKey","props","defaultUploadBucketName","doUpload","key","data","uploader","upload","Key","ContentType","Body","ACL","promise","uploadData","res","console","log","accessKeyId","secretAccessKey","region","defaultUploadBucketBaseURL","config","update","Config","S3","params","Bucket","process","env","NODE_ENV","Component","propTypes","string","isRequired","defaultProps","REACT_APP_region","REACT_APP_aws_access_key_id","REACT_APP_aws_secret_access_key","REACT_APP_s3_upload_bucket_base_url","REACT_APP_s3_upload_bucket_name"],"mappings":"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","file":"index.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport aws from \"aws-sdk\";\nimport yeast from \"yeast\";\n\nconst uploadOptions = { partSize: 10 * 1024 * 1024, queueSize: 1 };\n\nclass S3Uploader extends React.Component {\n  static propTypes = {\n    region: PropTypes.string.isRequired,\n    accessKeyId: PropTypes.string.isRequired,\n    secretAccessKey: PropTypes.string.isRequired,\n    defaultUploadBucketBaseURL: PropTypes.string.isRequired,\n    defaultUploadBucketName: PropTypes.string.isRequired\n  };\n  static defaultProps = {\n    region: `${process.env.REACT_APP_region}`,\n    accessKeyId: `${process.env.REACT_APP_aws_access_key_id}`,\n    secretAccessKey: `${process.env.REACT_APP_aws_secret_access_key}`,\n    defaultUploadBucketBaseURL: `${process.env\n      .REACT_APP_s3_upload_bucket_base_url}`,\n    defaultUploadBucketName: `${process.env.REACT_APP_s3_upload_bucket_name}`\n  };\n  escapeName = s => {\n    return encodeURIComponent(s)\n      .replace(/%20/gim, \"+\")\n      .replace(/%2F/gim, \"/\")\n      .replace(/\\\"/gim, \"%22\")\n      .replace(/\\#/gim, \"%23\")\n      .replace(/\\$/gim, \"%24\")\n      .replace(/\\&/gim, \"%26\")\n      .replace(/\\'/gim, \"%27\")\n      .replace(/\\(/gim, \"%28\")\n      .replace(/\\)/gim, \"%29\")\n      .replace(/\\,/gim, \"%2C\")\n      .replace(/\\:/gim, \"%3A\")\n      .replace(/\\;/gim, \"%3B\")\n      .replace(/\\=/gim, \"%3D\")\n      .replace(/\\?/gim, \"%3F\")\n      .replace(/\\@/gim, \"%40\");\n  };\n  getUploadKey = s => {\n    if (!s) {\n      s = yeast();\n    }\n    s = this.escapeName(s);\n    return this.props.defaultUploadBucketName + \"/\" + s;\n  };\n  componentDidMount() {\n    const {\n      accessKeyId,\n      secretAccessKey,\n      region,\n      defaultUploadBucketBaseURL\n    } = this.props;\n    aws.config.update(\n      new aws.Config({\n        accessKeyId,\n        secretAccessKey,\n        region\n      })\n    );\n    this.uploader = new aws.S3({\n      config: this.config,\n      params: {\n        Bucket: defaultUploadBucketBaseURL\n      }\n    });\n  }\n  doUpload = ({ key, data }) => {\n    key = this.getUploadKey(key);\n    return this.uploader\n      .upload(\n        {\n          Key: key,\n          ContentType: \"text/html\",\n          Body: data,\n          ACL: \"public-read\"\n        },\n        uploadOptions\n      )\n      .promise();\n  };\n  uploadData = async () => {\n    try {\n      const res = await this.doUpload({ key: \"test2.html\", data: \" fdasfda\" });\n      console.log(res);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  render() {\n    return (\n      <div onClick={this.uploadData}>\n        <small>\n          You are running this application in <b>{process.env.NODE_ENV}</b>{\" \"}\n          mode.\n        </small>\n      </div>\n    );\n  }\n}\n\nexport default S3Uploader;\n"]}